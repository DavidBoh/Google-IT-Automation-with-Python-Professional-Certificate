#!/usr/bin/env python3
import json
import locale
import sys
import reports
import emails
import mimetypes
import os.path
import smtplib

def load_data(filename):
  """Loads the contents of filename as a JSON file."""
  with open(filename) as json_file:
    data = json.load(json_file)
  return data

def format_car(car):
  """Given a car dictionary, returns a nicely formatted name."""
  return "{} {} ({})".format(
      car["car_make"], car["car_model"], car["car_year"])

def process_data(data):
  """Analyzes the data, looking for maximums.

  Returns a list of lines that summarize the information.
  """
  max_revenue = {"revenue": 0}
  for item in data:
    # Calculate the revenue generated by this model (price * total_sales)
    # We need to convert the price from "$1234.56" to 1234.56
    item_price = locale.atof(item["price"].strip("$"))
    item_revenue = item["total_sales"] * item_price
    if item_revenue > max_revenue["revenue"]:
      item["revenue"] = item_revenue
      max_revenue = item
  # TODO: also handle max sales
  car_info = []
  for item in data:
      car_info.append({'car_model': item['car']['car_model'], 'total_sales': item['total_sales']})
  highest_sales = 0
  highest_sales_model = ""

  for d in car_info:
      if d['total_sales'] > highest_sales:
          highest_sales = d['total_sales']
          highest_sales_model = d['car_model']
  # TODO: also handle most popular car_year
  car_info2 = []

  for item in data:
      car_info2.append({'car_make':item['car']['car_make'],'car_model':item['car']['car_model'],'car_year':item['car']['car_year'],'total_sales':item['total_sales']})

  year_list = list()
  for my_dict in car_info2:
      year_list.append(my_dict['car_year'])

  #create a list of dicts with only year and sum of total sales that year
  unique_years = list(set(year_list))
  total_per_year = list()
  sum_sales = 0
  for i in unique_years:
      for j in car_info2:
          if j['car_year'] == i:
              sum_sales = j['total_sales'] + sum_sales
      total_per_year.append({i:sum_sales})
      sum_sales=0

  winner_year = 0
  winner_year_sales = 0
  for i in unique_years: #iteration over list of unique years
      for v in total_per_year: # iteration over list of dicts
          for key,value in v.items(): # list unpacking
              if value > winner_year_sales:
                  winner_year = key
                  winner_year_sales = value

  summary = [
    "The {} generated the most revenue: ${}".format(
      format_car(max_revenue["car"]), max_revenue["revenue"]),
    "The Acura {} (1995) had the most sales: {}".format(
        highest_sales_model,highest_sales),
    "The most popular year was {} with {} sales.".format(
        winner_year,winner_year_sales),
  ]

  return summary

def cars_dict_to_table(car_data):
  """Turns the data in car_data into a list of lists."""
  table_data = [["ID", "Car", "Price", "Total Sales"]]
  for item in car_data:
    table_data.append([item["id"], format_car(item["car"]), item["price"], item["total_sales"]])
  return table_data

def main(argv):
  """Process the JSON data and generate a full report out of it."""
  data = load_data("car_sales.json")
  summary = process_data(data)
  the_cars_data = cars_dict_to_table(data)
  summary_str = str()
  summary_str2 = str()
  for i in summary:
      summary_str += i + "<br/>"

  # TODO: turn this into a PDF report
  reports.generate("/tmp/cars.pdf","Sales summary for last month",summary_str,the_cars_data)


  # TODO: send the PDF report as an email attachment
  sender = "automation@example.com"
  receiver = "{}@example.com".format(os.environ.get('USER'))
  subject = "Sales summary for last month"
  body = summary_str2

  message = emails.generate(sender, receiver, subject, body, "/tmp/cars.pdf")
  emails.send(message)
  print(summary_str2)
  print("script ran successfully")

if __name__ == "__main__":
  main(sys.argv)

